{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/API.js","webpack:///./src/js/SIM/SIM.js","webpack:///./src/js/SIM/SIMBird.js","webpack:///./src/js/SIM/SIMBricks.js","webpack:///./src/js/SIM/SIMCollide.js","webpack:///./src/js/SIM/SIMTime.js","webpack:///./src/js/UI/UI.js","webpack:///./src/js/UI/UIBird.js","webpack:///./src/js/UI/UIBirdXY.js","webpack:///./src/js/UI/UIBirdY.js","webpack:///./src/js/UI/UIBricks.js","webpack:///./src/js/UI/UIKeyBoard.js","webpack:///./src/js/UI/UIMessage.js","webpack:///./src/js/UI/UITimer.js","webpack:///./src/js/UI/UIViewPort.js","webpack:///./src/js/app.js","webpack:///./src/js/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAO;AACP;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;;AAEO;AACA;AACA;;;AAGA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;;;;;;;;;;;;;ACrGA;AAAA;AAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;ACzGA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,WAAW;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;;AAEL;AACA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS;;AAET;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;;;;;;;;;;;;ACpHA;AAAA;AAAA;AAAA;AAA6B;AACK;;;AAG3B;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,4BAA4B,2CAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;;ACpJA;AAAA;AAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAkC;AACU;;AAErC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB,+CAAG;AACnB,iBAAiB,iDAAK;AACtB;AACA,oCAAoC,iDAAK;AACzC;;AAEA,iBAAiB,qDAAS;AAC1B;AACA,kCAAkC,qDAAS;AAC3C,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;;;;;;;;;;;;;;;;;ACrDA;AAAA;AAAA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,aAAa,YAAY;;AAEzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;;;;;;;;;;;;;ACnDA;AAAA;AAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;;;;;;;;;;;;;ACXA;AAAA;AAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAkC;;AAE3B;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,yBAAyB,+CAAG;AAC5B;AACA;AACA;AACA;;AAEA;AACA,aAAa,IAAI;AACjB;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC/DA;AAAA;AAAA;AAAkC;;;AAG3B;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+CAAG,iBAAiB,+CAAG;AACvC,gBAAgB,+CAAG;AACnB;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;;AAEA,gBAAgB,+CAAG,iBAAiB,+CAAG;AACvC,gBAAgB,+CAAG;AACnB;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AAAoD;AAClB;;;AAGlwBAAwB,qDAAS;;AAEjC;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iDAAK;AACtB,0CAA0C,KAAK;;AAE/C;AACA,iBAAiB,qDAAS;AAC1B,wCAAwC,KAAK;AAC7C;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;;AAEA,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;;AAEA,KAAK;;AAEL;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;;;;;;;;;;;;;;AChTA;AAAA;AAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAkC;;AAElC;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,aAAa,YAAY;AACzB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;;;;;;;;;;;;;;AC5EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACA;AACK;AACT;AACQ;AACL;AACD;AACA;AACM;AACF;AACa;AACZ;AACf;AACW;;AAE/B;AACP,YAAY,+CAAK;;AAEjB;AACA;AACA;;AAEA;AACA,iBAAiB,+CAAK;AACtB;AACA;;AAEA,iBAAiB,8CAAI;AACrB;AACA;;AAEA,iBAAiB,mDAAS;AAC1B;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,qBAAqB,+CAAK;;AAE1B,QAAQ,6CAAG,IAAI,+CAAK;AACpB,KAAK;;AAEL;AACA,QAAQ,6CAAG,WAAW,oDAAO;AAC7B,QAAQ,6CAAG,WAAW,qDAAO;AAC7B,QAAQ,6CAAG,cAAc,0DAAU;AACnC,QAAQ,6CAAG,aAAa,yDAAS;;AAEjC,QAAQ,6CAAG,MAAM,0CAAE;AACnB,QAAQ,0CAAE,cAAc,mDAAO;AAC/B,QAAQ,0CAAE,cAAc,mDAAO;AAC/B,QAAQ,0CAAE,cAAc,iDAAM;AAC9B,QAAQ,0CAAE,cAAc,qDAAQ;AAChC,QAAQ,0CAAE,cAAc,yDAAU;AAClC,QAAQ,0CAAE,gBAAgB,yDAAU;AACpC,QAAQ,0CAAE,cAAc,qDAAQ;AAChC,QAAQ,0CAAE,eAAe,uDAAS;AAClC,QAAQ,0CAAE,yBAAyB,0CAAE;AACrC,QAAQ,0CAAE,2BAA2B,0CAAE;AACvC,QAAQ,0CAAE,4BAA4B,0CAAE;AACxC,QAAQ,6CAAG,0BAA0B,0CAAE;AACvC,QAAQ,6CAAG,oBAAoB,0CAAE;AACjC,QAAQ,6CAAG,6BAA6B,0CAAE;AAC1C,QAAQ,0CAAE,mBAAmB,0CAAE;AAC/B,QAAQ,6CAAG,4BAA4B,0CAAE;AACzC,QAAQ,6CAAG,0BAA0B,0CAAE;AACvC,QAAQ,0CAAE,mBAAmB,6CAAG;AAChC,QAAQ,6CAAG,sBAAsB,6CAAG;AACpC,QAAQ,0CAAE,mBAAmB,6CAAG;AAChC,QAAQ,0CAAE,kBAAkB,6CAAG;AAC/B,QAAQ,0CAAE,sBAAsB,6CAAG;AACnC,QAAQ,0CAAE,oBAAoB,6CAAG;AACjC,QAAQ,6CAAG,yBAAyB,6CAAG;AACvC,KAAK;;AAEL;AACA,QAAQ,6CAAG;AACX,QAAQ,0CAAE;AACV;AACA;;;;;;;;;;;;;;ACnFA;AAAA;AAA6B;;;AAG7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,2CAAG;;AAEX;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;AAGA;;AAEA;AACA,IAAI,2CAAG;AACP","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/index.js\");\n","export function UI_ln(msg) {\r\n    console.log(msg);\r\n}\r\n\r\nexport function UI_echo(varName, val) {\r\n    UI_ln(varName + \"=\" + val);\r\n}\r\n\r\n\r\n\r\n","// (c) Alexander Ponomarenko brain16383@yandex.ru\n\nwindow.CSIM_simulation = function()\n{\n    SIM.newTick();\n}\n\nexport const INTRO = 'intro';\nexport const PLAY = 'play';\nexport const GAME_OVER = 'gameOver';\n\n\nexport var SIM = {\n    SIMTime : null,\n    SIMBird : null,\n    SIMCollide : null,\n    SIMBricks : null,\n    UI: null,\n    state : INTRO,\n    m_tickStep : 0.05,\n\n    init : function()\n    {\n        this.SIMTime.init(this.m_tickStep);\n        this.SIMBird.init(this.m_tickStep);\n        this.SIMCollide.init();\n        this.SIMBricks.init();\n    },\n\n    go : function(gameState)\n    {\n        if (typeof gameState === \"undefined\") {\n            gameState = INTRO;\n        }\n        this.setState(gameState);\n        this.SIMTime.start();\n        this.SIMBird.start();\n        this.SIMCollide.start();\n        this.SIMBricks.start();\n        this.tick();\n    },\n\n    tick : function()\n    {\n        this.SIMBird.calc();\n        if (\n            this.SIMCollide.collisionWithGround() ||\n            this.SIMCollide.collisionWithSky() ||\n            this.SIMCollide.collisionWithBrick()\n        )\n        {\n            this.setState(GAME_OVER);\n        };\n\n        this.UI.draw();\n        if(this.playing())\n        {\n            var timeToSleep = this.SIMTime.getSleepTime();\n            setTimeout(\"CSIM_simulation()\", timeToSleep);\n\n        };\n        this.SIMBricks.update();\n    },\n\n    newTick : function()\n    {\n        this.SIMTime.newTick();\n        this.tick();\n    },\n\n    gameIsOver() {\n        return (this.state === GAME_OVER);\n    },\n\n    playing() {\n        return (this.state === PLAY);\n    },\n\n    isIntro() {\n        return (this.state === INTRO);\n    },\n\n    setState(newState) {\n        this.state = newState;\n\n        let body = document.getElementById('body');\n        body.className = newState;\n    },\n\n    getState() {\n        return this.state;\n    },\n\n    restartGame() {\n        this.SIMBricks.init();\n        this.go(PLAY);\n    },\n\n    setSIMTime(SIMTime) {\n        this.SIMTime = SIMTime;\n    }\n};\n\n","export var SIMBird = {\n    m_instanceName : 'SIM.SIMBird',\n    m_m : 0.05,\n    m_g : 2* 0.98,\n    m_aLift : 4*0.98,\n\n    m_dt : 1,\n\n    m_startX : 10.5,\n    m_lastX : 0,\n    m_vX : 3,\n    m_distance : 0,\n\n    m_startY : 10,\n    m_lastY : 0,\n    m_y : 0,\n\n\n    m_startVY : 3.0,\n    m_lastVY : 3.0,\n    m_vY : 0,\n\n    m_a : 0,\n\n    m_r : 0.66,\n    UIViewPort: null,\n    UIKB: null,\n\n    init : function(dt)\n    {\n        if (typeof (dt) != \"undefined\")\n        {\n            this.m_dt = dt;\n        };\n\n    },\n\n    getSimR() {\n        return this.m_r;\n    },\n\n    start : function()\n    {\n        this.m_startX = this.UIViewPort.getVPModelW() / 4;\n\n        this.m_x       = this.m_startX;\n        this.m_lastX   = this.m_x;\n\n        this.m_y       = this.m_startY;\n        this.m_lastY   = this.m_y;\n        this.m_vY      = this.m_startVY;\n        this.m_lastVY  = this.m_startVY;\n    },\n\n    calc : function()\n    {\n        this.calcX();\n        this.calcY();\n        this.m_distance = this.m_x - this.m_startX;\n    },\n\n    calcX : function()\n    {\n        this.m_x       = this.m_lastX + (this.m_vX * this.m_dt);\n\n        this.m_lastX   = this.m_x;\n    },\n\n\n    calcY : function()\n    {\n        var liftEnabled = 0;\n        if  (this.UIKB.getKeyPressed())\n        {\n            liftEnabled = 1.0;\n        };\n\n        this.m_a    = -this.m_g + (liftEnabled * this.m_aLift);\n        this.m_vY   = this.m_lastVY + (this.m_a * this.m_dt);\n        this.m_y    = this.m_lastY + (this.m_vY * this.m_dt);\n\n        this.m_lastVY  = this.m_vY;\n        this.m_lastY   = this.m_y;\n    },\n\n    getY : function ()\n    {\n        return this.m_y;\n    },\n\n    getX : function ()\n    {\n        return this.m_x;\n    },\n\n    getR : function ()\n    {\n        return this.m_r;\n    },\n\n    getDistance : function ()\n    {\n        return this.m_distance;\n    }\n\n};\n\n","export var SIMBricks = {\n    m_instanceName : 'SIM.SIMBricks',\n    m_data : [],\n    UIViewPort: null,\n    UIBricks: null,\n    SIMBird: null,\n\n    init() {\n        this.build();\n    },\n\n    start() {\n    },\n\n    build() {\n        this.m_data = [[5,0,5], [10,0,4],[15,15,5], [20,0,3], [25,0,8], [30,0,5], [30,10,10]];\n        //x,y,h\n    },\n\n    getData() {\n        return this.m_data;\n    },\n\n    update() {\n        const distance   = this.SIMBird.getDistance();\n        const VPModelW   = this.UIViewPort.getVPModelW();\n        const brickSimW  = this.UIBricks.getBrickSimW();\n        let bricksCount = this.m_data.length;\n        let availableBricks = this.getAvailableBricks();\n        for (let i=0; i<this.m_data.length; i++)\n        {\n            let brickAr = this.m_data[i];\n\n            if (!this.isBrickVisible(brickAr))\n            {\n                let retries = 20;\n                for (let j=0; j<retries; j++) {\n                    var newBrick = this.createBrick(bricksCount);\n                    const ok = this.isNewBrickOk(newBrick, availableBricks);\n                    if (ok) {\n                        break;\n                    }\n                    else {\n                    };\n                };\n                this.m_data[i] = newBrick;\n                availableBricks = this.getAvailableBricks();\n                bricksCount++;\n            };\n        };\n\n    },\n\n    getAvailableBricks() {\n        let visibleBricks = [];\n        for (let i=0; i<this.m_data.length; i++) {\n            let brickAr = this.m_data[i];\n            if (this.isBrickVisible(brickAr)) {\n                visibleBricks[i] = brickAr;\n            };\n        };\n        return visibleBricks;\n    },\n\n    isBrickVisible(brickAr) {\n        const distance   = this.SIMBird.getDistance();\n        const brickSimW  = this.UIBricks.getBrickSimW();\n        const simX = brickAr[0];\n        const brickIsVisible = !((simX + brickSimW) < distance);\n        return brickIsVisible;\n    },\n\n    isNewBrickOk(newBrick, availableBricks) {\n        let ok = true;\n        let [x, y, h] = newBrick;\n        var VPModelH   = this.UIViewPort.getVPModelH();\n        availableBricks.forEach((brick) => {\n            let [brickX, brickY, brickH] = brick;\n            let testX = (Math.abs(x - brickX) <= 1);\n\n            const dx = Math.abs(x - brickX);\n            const dy = VPModelH - brickH - h;\n\n            if (\n                (dx <= 1) ||\n                (dx*dy < 6)\n            ) {\n                ok = false;\n            };\n\n        });\n\n        return ok;\n    },\n\n    createBrick(bricksCount) {\n        let rndTopBottom  = Math.random();\n        let simH          = Math.round(Math.random() * 10);\n        let top = false;\n        if (rndTopBottom < 0.5) {\n            top = true;\n        };\n\n        const simX = Math.round(this.SIMBird.getDistance() +\n            this.UIViewPort.getVPModelW() + Math.random() * bricksCount);\n\n        let simY = 0;\n\n        if (top) {\n            simY = this.UIViewPort.getVPModelH() - simH;\n        };\n\n        return [simX, simY, simH];\n    }\n\n\n};\n","import {SIM} from './SIM.js';\nimport {UI_echo} from '../API.js';\n\n\nexport var SIMCollide = {\n    m_instanceName : \"SIM.SIMCollide\",\n    m_skyY : 20,\n    m_groundY : 0,\n    UIViewPort: null,\n    SIMBird: null,\n\n    init : function(dt) {\n    },\n\n    start : function() {\n    },\n\n    collisionWithGround : function()  {\n        var birdY = this.SIMBird.getY();\n        var r = this.SIMBird.getR();\n        var code = false;\n        if (birdY - r <= this.m_groundY)\n        {\n            code = true;\n        };\n\n        return code;\n    },\n\n    collisionWithSky : function() {\n        var birdY = this.SIMBird.getY();\n        var r = this.SIMBird.getR();\n        var code = false;\n        if (birdY + r >= this.m_skyY)\n        {\n            code = true;\n        };\n\n        return code;\n    },\n\n    getDistance : function(x0, y0, x1, y1) {\n        var dx = x1-x0;\n        var dy = y1-y0;\n\n        var d = Math.sqrt(dx*dx + dy*dy);\n        return d;\n    },\n\n    insideBox : function(x, y, minX, minY, maxX, maxY)\n    {\n        var insideX = false;\n        var insideY = false;\n\n        if ((minX <= x) && (x <= maxX))\n        {\n            insideX = true;\n        };\n\n        if ((minY <= y) && (y <= maxY))\n        {\n            insideY = true;\n        };\n\n        var code = false;\n        if (insideX && insideY)\n        {\n            code = true;\n        };\n\n        return code;\n    },\n\n    collisionWithBrick : function()\n    {\n        var brickDataAr   = SIM.SIMBricks.getData();\n        var kAr           = this.UIViewPort.getK();\n        var kX            = kAr[0];\n        var simW          = 20 / kX;\n        var birdSimX      = this.SIMBird.getX();\n        var birdSimY      = this.SIMBird.getY();\n        var birdSimR      = this.SIMBird.getR();\n\n        var bird_xR = birdSimX + birdSimR;\n        var bird_yR = birdSimY;\n        var bird_xU = birdSimX;\n        var bird_yU = birdSimY + birdSimR;\n        var bird_xL = birdSimX - birdSimR;\n        var bird_yL = birdSimY;\n        var bird_xD = birdSimX;\n        var bird_yD = birdSimY - birdSimR;\n\n\n\n        var i;\n        var code = false;\n        for (i=0; i<brickDataAr.length; i++)\n        {\n            var brickAr = brickDataAr[i];\n            var simX = brickAr[0];\n            var simY = brickAr[1];\n            var simH = brickAr[2];\n\n            var xLD  = simX;\n            var yLD  = simY;\n            var xLU  = xLD;\n            var yLU  = yLD + simH;\n            var xRD  = simX + simW;\n            var yRD  = simY;\n            var xRU  = xRD;\n            var yRU  = yLU;\n\n            var dLD = this.getDistance(birdSimX, birdSimY, xLD, yLD);\n            var dLU = this.getDistance(birdSimX, birdSimY, xLU, yLU);\n            var dRD = this.getDistance(birdSimX, birdSimY, xRD, yRD);\n            var dRU = this.getDistance(birdSimX, birdSimY, xRU, yRU);\n            if (\n                (dLD < birdSimR) ||\n                (dLU < birdSimR) ||\n                (dRD < birdSimR) ||\n                (dRU < birdSimR)\n            )\n            {\n                code = true;\n                break;\n            };\n\n\n            //circle.L, circle.R, circle.U, circle.D are inside box\n            var insideL = this.insideBox(bird_xL, bird_yL, xLD, yLD, xRU, yRU);\n            var insideR = this.insideBox(bird_xR, bird_yR, xLD, yLD, xRU, yRU);\n            var insideU = this.insideBox(bird_xU, bird_yU, xLD, yLD, xRU, yRU);\n            var insideD = this.insideBox(bird_xD, bird_yD, xLD, yLD, xRU, yRU);\n            if (\n                (insideL) ||\n                (insideR) ||\n                (insideU) ||\n                (insideD)\n            )\n            {\n                code = true;\n                break;\n            };\n\n        };\n        return code;\n    }\n\n};\n\n","export var SIMTime = {\n    m_instanceName : 'SIM.SIMTime',\n    m_startTime : 0,\n    m_modelTime : 0,\n    m_TICK_STEP : 1000,\n\n    init : function(dtSeconds)\n    {\n        if (typeof (dtSeconds) != \"undefined\")\n        {\n            this.m_TICK_STEP = dtSeconds * 1000;\n        };\n    },\n\n    getSystemTime : function()\n    {\n        var time = new Date;\n        return time.getTime();\n    },\n\n    start : function()\n    {\n        this.m_startTime = this.getSystemTime();\n        this.m_modelTime = 0;\n    },\n\n    getSleepTime : function()\n    {\n        var nextTickTime = this.m_startTime + (this.m_modelTime + this.m_TICK_STEP);\n        var curTime = this.getSystemTime();\n        var sleepTime = nextTickTime - curTime;\n        return sleepTime;\n    },\n\n    getModelTime : function()\n    {\n        return this.m_modelTime;\n    },\n\n    newTick : function()\n    {\n        this.m_modelTime = this.m_modelTime + this.m_TICK_STEP;\n    }\n\n};\n\n","import {SIM} from '../SIM/SIM.js';\nimport {INTRO, GAME_OVER} from \"../SIM/SIM\";\n\nexport var UI = {\n    UITimer : null,\n    UIBirdY : null,\n    UIBird : null,\n    UIBirdXY : null,\n    UIKB : null,\n    UIBricks : null,\n    UIViewPort : null,\n    UIMessage : null,\n\n    initiable: [\n        'UITimer', 'UIBirdY','UIBirdXY','UIKB','UIViewPort','UIBricks','UIBird'\n    ],\n    drawable: [\n        'UIViewPort', 'UITimer', 'UIBirdY','UIBird','UIBirdXY','UIBricks','UIMessage'\n    ],\n\n    init : function(newW, newH)\n    {\n        let me = this;\n        this.initiable.forEach(function(item, i, arr) {\n            me[item].init(newW, newH);\n        });\n\n    },\n\n    draw : function()\n    {\n        let me = this;\n        switch (SIM.getState()) {\n            case INTRO:\n                this.UIViewPort.draw();\n                this.UIMessage.draw(INTRO);\n                break;\n\n            case GAME_OVER:\n                this.drawable.forEach(function(item, i, arr) {\n                    me[item].draw(GAME_OVER);\n                });\n                break;\n\n            default:\n                this.drawable.forEach(function(item, i, arr) {\n                    if (item !== 'UIMessage') {\n                        me[item].draw();\n                    };\n                });\n\n        }\n    }\n};\n\n\n\n\n","var cycle = 30;\nexport var UIBird = {\n    m_instanceName : 'UI.UIBird',\n    m_imgW : 20,\n    m_imgH : 20,\n    m_x : 0,\n    m_y : 0,\n    m_imgCenterDX : 0,\n    m_imgCenterDY : 0,\n    m_simW: 0,\n    UIViewPort: null,\n    SIMBird: null,\n\n    init () {\n        this.m_kAr  = this.UIViewPort.getK();\n        const kX      = this.m_kAr[0];\n        const kY      = this.m_kAr[1];\n        this.m_simW = 2 * this.SIMBird.getSimR();\n        this.m_imgW = this.m_simW * kX;\n        this.m_imgH = this.m_simW * kY;\n\n        this.m_imgCenterDX = -this.m_imgW / 2;\n        this.m_imgCenterDY = -this.m_imgH / 2;\n    },\n\n    draw() {\n        const modelX = this.SIMBird.getX();\n        const modelY = this.SIMBird.getY();\n\n        let oldX = this.m_x;\n        let oldY = this.m_y;\n        this.m_x = this.UIViewPort.modelXToScreenX(modelX);\n        this.m_y = this.UIViewPort.modelYToScreenY(modelY);\n\n        let {ctx, canvas} = this.UIViewPort.getRenderContext();\n\n        if (cycle >= 0) {\n            ctx.strokeStyle = \"rgb(255,0,0)\";\n\n            ctx.beginPath();\n            ctx.arc(this.m_x, this.m_y, this.m_imgW/2, 0, 2*Math.PI, false);\n            ctx.closePath();\n            ctx.fill();\n            ctx.stroke();\n        }\n    },\n\n    getXY() {\n        return [this.m_x, this.m_y];\n    }\n\n};\n\n","export var UIBirdXY = {\n    m_instanceName : 'UI.UIBird',\n    UIBird:null,\n\n    init : function() {\n    },\n\n    draw : function() {\n        var arXY = this.UIBird.getXY();\n    }\n\n};\n\n","export var UIBirdY = {\n    m_instanceName : 'UI.UIBirdY',\n    SIMBird: null,\n\n    init : function() {\n    },\n\n    draw : function()\n    {\n        var birdY = this.SIMBird.getY();\n    }\n\n};\n\n","import {SIM} from '../SIM/SIM.js';\n\nexport var UIBricks = {\n    m_instanceName : \"UI.UIBricks\",\n    m_screenW : 20,\n    m_simW : 0,\n    m_kAr : \"\",\n    UIViewPort: null,\n    SIMBird: null,\n\n    init : function()\n    {\n        this.m_kAr  = this.UIViewPort.getK();\n        var kX      = this.m_kAr[0];\n        this.m_simW = 1;\n    },\n\n    draw : function()\n    {\n        var dataAr     = SIM.SIMBricks.getData();\n        var kY         = this.m_kAr[1];\n        let kX          = this.m_kAr[0];\n        var distance   = this.SIMBird.getDistance();\n        var VPModelW   = this.UIViewPort.getVPModelW();\n\n        var i;\n        let {ctx} = this.UIViewPort.getRenderContext();\n        ctx.strokeStyle = \"rgb(255,255,255)\";\n        for (i=0; i<dataAr.length; i++)\n        {\n            var brickAr = dataAr[i];\n            var simX = brickAr[0];\n            var simY = brickAr[1];\n            var simH = brickAr[2];\n\n            if ((simX + this.m_simW) < distance) {\n                continue;\n            };\n\n            if (simX > (distance + VPModelW))\n            {\n                continue;\n            };\n\n            var screenX = this.UIViewPort.modelXToScreenX(simX);\n            var screenY = this.UIViewPort.modelYToScreenY(simY);\n            var screenH = simH * kY;\n\n            var screenY2 = screenY - screenH;\n            var screenW = this.m_simW * kX;\n            var screenW2 = screenW / 2;\n\n            ctx.strokeRect(screenX, screenY2, screenW, screenH);\n\n        };\n\n    },\n\n    getBrickSimW : function()\n    {\n        return this.m_simW;\n    }\n\n};\n","import {SIM} from '../SIM/SIM.js';\n\n\nexport var UIKeyBoard = {\n    m_instanceName : 'UI.UIKeyBoard',\n    m_esc : false,\n    m_keyPressed : false,\n\n    init : function() {\n        document.addEventListener('keydown', (event) => {\n            const keyName = event.key;\n            if (keyName === ' ') {\n                event.preventDefault();\n            }\n            if (keyName === 'Escape') {\n                this.m_esc = true;\n            }\n            else {\n                this.m_keyPressed = true;\n            }\n            if (SIM.gameIsOver() || SIM.isIntro()) {\n                SIM.restartGame();\n            }\n        });\n\n        document.addEventListener('keyup', (event) => {\n            this.m_keyPressed = false;\n        });\n\n        let a_canvas = document.getElementById('a_canvas');\n\n        a_canvas.addEventListener('touchstart', (event) => {\n            event.preventDefault();\n            this.m_keyPressed = true;\n\n            if (SIM.gameIsOver() || SIM.isIntro()) {\n                SIM.restartGame();\n            }\n        });\n\n        a_canvas.addEventListener('touchend', (event) => {\n            event.preventDefault();\n            this.m_keyPressed = false;\n        });\n    },\n\n    getKeyPressed : function()\n    {\n        return this.m_keyPressed;\n    }\n\n};\n\n","import {SIM, INTRO, GAME_OVER} from '../SIM/SIM.js';\nimport {UI_echo} from '../API.js';\n\n\nconst atomW = 3;\nconst atomH = 3;\nconst LETTER_WIDTH = atomW*3;\nconst LINE_HEIGHT = atomW*5;\n\nconst PRIMITIVES_AR = [\n    [0.0,0.0, 0.0,0.0],     //\n    [0.0,4*atomH, atomW,4*atomH],    //P_1\n    [atomW,4*atomH, 2*atomW,4*atomH],//P_2\n\n    [0.0,3*atomH, atomW,3*atomH],    //P_3\n    [atomW,3*atomH, 2*atomW,3*atomH],//P_4\n\n    [0.0,2*atomH, atomW,2*atomH],    //P_5\n    [atomW,2*atomH, 2*atomW,2*atomH],//P_6\n\n    [0.0,atomH, atomW,atomH],        //P_7\n    [atomW,atomH, 2*atomW,atomH],    //P_8\n\n    [0.0,0.0, atomW,0.0],            //P_9\n    [atomW,0.0, 2*atomW,0.0],        //P_10\n\n    [0.0,3*atomH, 0.0,4*atomH],        //P_11\n    [atomW,3*atomH, atomW,4*atomH],    //P_12\n    [2*atomW,3*atomH, 2*atomW,4*atomH], //P_13\n\n    [0.0,2*atomH, 0.0,3*atomH],        //P_14\n    [atomW,2*atomH, atomW,3*atomH],    //P_15\n    [2*atomW,2*atomH, 2*atomW,3*atomH],//P_16\n\n    [0.0,atomH, 0.0,2*atomH],        //P_17\n    [atomW,atomH, atomW,2*atomH],    //P_18\n    [2*atomW,atomH, 2*atomW,2*atomH],//P_19\n\n    [0.0,0.0, 0.0,atomH],            //P_20\n    [atomW,0.0, atomW,atomH],        //P_21\n    [2*atomW,0.0, 2*atomW,atomH],    //P_22\n\n    [0.0,0.0, 0.0,0.0],     //23\n    [0.0,0.0, 0.0,0.0],     //24\n    [0.0,0.0, 0.0,0.0],     //25\n    [0.0,0.0, 0.0,0.0],     //26\n    [0.0,0.0, 0.0,0.0],     //27\n    [0.0,0.0, 0.0,0.0],     //28\n    [0.0,0.0, 0.0,0.0],     //29\n    [0.0,0.0, 0.0,0.0],     //30\n\n    [0.0,4*atomH, atomW,2*atomH],       //P_31\n    [atomW,2*atomH, 2*atomW,4*atomH],   //P_32\n    [0.0,0.0, atomW,2*atomH],           //P_33\n    [ atomW,2*atomH, 2*atomW,0.0],      //P_34\n    [0.0,4*atomH, atomW,0.0],           //P_35\n    [atomW,0.0, 2*atomW,4*atomH],       //P_36\n    [0.0,3*atomH, atomW,4*atomH],       //P_37\n    [atomW,4*atomH, 2*atomW,3*atomH],   //P_38\n    [2*atomW,atomH, atomW,0.0],         //P_39\n    [0.0,atomH, atomW,0.0],             //P_40\n    [0.0,0.0, atomW,4*atomH],           //P_41\n    [atomW,4*atomH, 2*atomW,0.0],       //P_42\n    [2*atomW,3*atomH, atomW,2*atomH],   //P_43\n    [atomW,2*atomH, 2*atomW,atomH]      //P_44\n];\n\nconst LETTERS_AR = [\n    [13, 2, 1, 11, 14, 17, 20, 9, 10, 22, 19, 6], //G\n    [20, 17, 14, 11, 1, 2, 13, 16, 19, 22, 5, 6], //A\n    [11, 14, 17, 20, 13, 16, 19, 22, 31, 32, 0, 0], //M\n    [2, 1, 11, 14, 17, 20, 9, 10, 5, 6, 0, 0], //E\n    [1, 2, 13, 16, 19, 22, 9, 10, 20, 17, 14, 11], //O\n    [35, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], //V\n    [1, 2, 13, 16, 6, 5, 14, 11, 17, 20, 34, 0], //R\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], //SPACE\n    [1, 2, 12, 15, 18, 21, 0, 0, 0, 0, 0, 0], //T\n    [1, 38, 16, 19, 39, 9, 20, 17, 14, 11, 0, 0], //D\n    [1, 2, 12, 15, 18, 21, 9, 10, 0, 0, 0, 0], //I\n    [2, 1, 11, 14, 17, 20, 23, 24, 9, 10, 0, 0], //C\n    [1, 2, 13, 16, 6, 5, 14, 11, 17, 20, 0, 0], //P\n    [11, 14, 17, 20, 9, 10, 0, 0, 0, 0, 0, 0],  //L\n    [31, 32, 18, 21, 0, 0, 0, 0, 0, 0, 0, 0],  //Y\n    [2, 1, 11, 14, 5, 6, 19, 22, 9, 10, 0, 0],  //S\n    [20, 17, 14, 11, 31, 34, 22, 19, 16, 13, 0, 0],  //N\n    [2, 1, 11, 14, 17, 20, 5, 6],  //F\n    [11, 14, 17, 20, 9, 10, 22, 19, 16, 13, 0, 0],  //F\n    [11, 14, 17, 20, 1, 38, 43, 44, 39, 9, 5, 0]  //B\n];\n\nconst L_G = 0, L_A=1, L_M=2, L_E=3, L_O=4, L_V=5, L_R=6, L_SPACE=7, L_T=8, L_D=9, L_I=10,\n    L_C=11, L_P=12, L_L=13, L_Y=14, L_S=15, L_N=16, L_F=17, L_U=18, L_B=19;\nconst letterToCode = {\n    'G' : 0,\n    'A' : 1,\n    'M' : 2,\n    'E' : 3,\n    'O' : 4,\n    'V' : 5,\n    'R' : 6,\n    ' ' : 7,\n    'T' : 8,\n    'D' : 9,\n    'I' : 10,\n    'C' : 11,\n    'P' : 12,\n    'L' : 13,\n    'Y' : 14,\n    'S' : 15,\n    'N' : 16,\n    'F' : 17,\n    'U' : 18,\n    'B' : 19\n};\n\nexport var UIMessage = {\n    GAME_OVER: 1,\n    GAME_ABOUT: 2,\n    UIViewPort: null,\n    color: \"rgb(255,255,0)\",\n    bgColor: \"rgb(0,0,0)\",\n    init(msgType) {\n        if (msgType === GAME_OVER) {\n\n        }\n    },\n\n    draw(state) {\n        let message = '';\n        let isMobileOrTablet = window.isMobileOrTablet();\n        let task = 'PRESS A BUTTON';\n        if (isMobileOrTablet) {\n            task = 'TAP SCREEN';\n        };\n        switch (state) {\n            case INTRO:\n                message = `FLYING BALL\\n${task}\\nTO PLAY`;\n\n                break;\n            case GAME_OVER:\n                message = `GAME OVER\\n${task}\\nTO PLAY`;\n                break;\n            default:\n                message = '';\n        }\n\n        this.renderText(message);\n    },\n\n    renderText(text) {\n        let lettersAr = text.split('');\n        let [lettersNumber, linesNumber] = this.getMaxLettersNumberInLine(lettersAr);\n\n        let viewPortW = this.UIViewPort.m_viewPortW;\n        let viewPortH = this.UIViewPort.m_viewPortH;\n        let kX = this.getKX(lettersNumber, linesNumber);\n\n        let messageSize = {\n            x: lettersNumber * LETTER_WIDTH * kX,\n            y: linesNumber * LINE_HEIGHT * kX};\n        let messagePos = {\n            x: (viewPortW - messageSize.x) / 2.0,\n            y: (viewPortH - messageSize.y) / 2.0\n        };\n\n        this.renderBox(messagePos, messageSize);\n        this.zoomSocial(kX);\n\n        const lettersDX = 2*kX;\n        const lettersDY = -2*kX;\n\n        let lineNo = 0;\n        let letterNo = 0;\n        for (let i=0; i<lettersAr.length; i++) {\n            let letter = lettersAr[i];\n            if (letter === '\\n') {\n                letterNo = 0;\n                lineNo++;\n                continue;\n            };\n            let letterPos = {\n                x: messagePos.x + lettersDX + (LETTER_WIDTH * letterNo * kX),\n                y: messagePos.y + lettersDY + lineNo * LINE_HEIGHT * kX\n            }\n\n            this.renderLetter(letterPos, letter, kX);\n            letterNo++;\n        }\n    },\n\n    zoomSocial(kX) {\n        let newSize = 10 * kX;\n        let newSizeS = '' + newSize + 'px';\n\n        let sh = document.getElementsByClassName('sh')[0];\n        sh.style.width = newSizeS;\n        sh.style.height = newSizeS;\n\n        let fb = document.getElementsByClassName('fb')[0];\n        fb.style.width = newSizeS;\n        fb.style.height = newSizeS;\n\n        let ig = document.getElementsByClassName('ig')[0];\n        ig.style.width = newSizeS;\n        ig.style.height = newSizeS;\n\n    },\n\n    getKX(lettersNumber, linesNumber) {\n        let viewPortW = this.UIViewPort.m_viewPortW;\n        let viewPortH = this.UIViewPort.m_viewPortH;\n        let kX = Math.floor(viewPortW / lettersNumber / LETTER_WIDTH);\n        if (kX < 0.1) {\n            kX = viewPortW / lettersNumber / LETTER_WIDTH;\n        }\n        let kY = Math.floor(viewPortH / linesNumber / LINE_HEIGHT);\n        if (kY < 0.1) {\n            kY = viewPortH / linesNumber / LINE_HEIGHT;\n        }\n        if (kY < kX) {\n            kX = kY;\n        };\n        const maxKX = 6;\n        if (kX > maxKX) {\n            kX = maxKX;\n        };\n        return kX;\n    },\n\n    getMaxLettersNumberInLine(lettersAr) {\n        let linesLettersCount = [];\n        let lineNo = 0;\n        let letterNo = 0;\n        for (let i=0; i<lettersAr.length; i++) {\n            let letter = lettersAr[i];\n            if (letter === '\\n') {\n                letterNo = 0;\n                lineNo++;\n                continue;\n            };\n            letterNo++;\n            linesLettersCount[lineNo] = letterNo;\n        };\n\n        let maxLength = -1;\n        linesLettersCount.forEach((count) => {\n            if (count > maxLength) {\n                maxLength = count;\n            };\n        });\n        return [maxLength, linesLettersCount.length];\n    },\n\n    renderLetter(letterPos, letter, kX) {\n        let letterCode = letterToCode[letter];\n        let letterPrimitivesAr = LETTERS_AR[letterCode];\n\n        for (let j=0; j<letterPrimitivesAr.length; j++) {\n            let primitiveCode = letterPrimitivesAr[j];\n            if (primitiveCode === 0) {\n                continue;\n            };\n\n            let primitiveAr = PRIMITIVES_AR[primitiveCode];\n\n            this.renderPrimitive (primitiveAr, kX, letterPos);\n        }\n\n    },\n\n    renderPrimitive (primitiveAr, kX, letterPos) {\n        let primitiveX0 = primitiveAr[0];\n        let primitiveY0 = primitiveAr[1];\n        let primitiveX1 = primitiveAr[2];\n        let primitiveY1 = primitiveAr[3];\n        let viewPortH = this.UIViewPort.m_viewPortH;\n\n\n        let x0 = Math.floor(letterPos.x + primitiveX0 * kX);\n        let y0 = Math.floor(letterPos.y + (LINE_HEIGHT - primitiveY0) * kX);\n        if (y0 > viewPortH) {\n            y0 = viewPortH - 1;\n        };\n\n        let x1 = Math.floor(letterPos.x + primitiveX1 * kX);\n        let y1 = Math.floor(letterPos.y + (LINE_HEIGHT - primitiveY1) * kX);\n        if (y1 > viewPortH) {\n            y1 = viewPortH - 1;\n        };\n\n        let {ctx} = this.UIViewPort.getRenderContext();\n        ctx.strokeStyle = this.color;\n        ctx.beginPath();\n        ctx.moveTo(x0,y0);\n        ctx.lineTo(x1,y1);\n        ctx.stroke();\n\n    },\n\n    renderBox(messagePos, messageSize) {\n        let {ctx} = this.UIViewPort.getRenderContext();\n        ctx.fillStyle = this.bgColor;\n        ctx.fillRect(messagePos.x, messagePos.y, messageSize.x, messageSize.y);\n    }\n};\n\n","export var UITimer = {\n    m_instanceName : 'UI.UITimer',\n    SIMTime: null,\n\n    init : function() {\n    },\n\n    draw : function()\n    {\n        var modelTime = this.SIMTime.getModelTime();\n        var timeSec = Math.round(modelTime / 1000);\n    }\n\n};\n\n\n","import {UI_echo} from '../API.js';\n\nlet canvas = null;\nlet ctx = null;\nexport var UIViewPort = {\n    m_instanceName : 'UI.UIViewPort',\n    m_viewPortH : 300,\n    m_viewPortW : 500,\n    m_viewPortModelH : 20,\n    m_viewPortModelW : 0,\n    m_kX : 0,\n    m_kY : 0,\n    m_scrollViewPort : true,\n    SIMBird: null,\n\n    init : function(newW, newH) {\n        this.resize(newW, newH);\n    },\n\n    draw : function()  {\n        let {ctx, canvas} = this.getRenderContext();\n        ctx.fillStyle = \"rgb(0,0,0)\";\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n    },\n\n    modelYToScreenY : function(modelY)\n    {\n        var screenY = this.m_viewPortH - Math.round(this.m_kY * modelY);\n        return screenY;\n    },\n\n    modelXToScreenX : function(modelX)\n    {\n        var distance = this.SIMBird.getDistance();\n        if (!this.m_scrollViewPort)\n        {\n            distance = 0;\n        };\n        var screenX = Math.round(this.m_kX * (modelX - distance));\n        return screenX;\n    },\n\n    getK : function ()\n    {\n        return new Array(this.m_kX, this.m_kY);\n    },\n\n    getVPModelW : function ()\n    {\n        return this.m_viewPortModelW;\n    },\n\n    getVPModelH : function ()\n    {\n        return this.m_viewPortModelH;\n    },\n\n    resize(newW, newH) {\n        this.m_viewPortW = newW;\n        this.m_viewPortH = newH;\n\n        this.m_viewPortModelW = this.m_viewPortModelH / this.m_viewPortH * this.m_viewPortW;\n\n        this.m_kX = this.m_viewPortW / this.m_viewPortModelW;\n\n        this.m_kY = this.m_viewPortH / this.m_viewPortModelH;\n    },\n\n    getRenderContext() {\n        if (ctx === null) {\n            canvas = document.getElementById('a_canvas');\n            ctx = canvas.getContext(\"2d\");\n        };\n        return {ctx, canvas};\n    }\n\n};\n\n","import {UIBirdXY} from \"./UI/UIBirdXY\";\nimport {UIBricks} from \"./UI/UIBricks\";\nimport {SIMCollide} from \"./SIM/SIMCollide\";\nimport {UIBird} from \"./UI/UIBird\";\nimport {UIViewPort} from \"./UI/UIViewPort\";\nimport {SIMTime} from \"./SIM/SIMTime\";\nimport {UIBirdY} from \"./UI/UIBirdY\";\nimport {UITimer} from \"./UI/UITimer\";\nimport {UIKeyBoard} from \"./UI/UIKeyBoard\";\nimport {UIMessage} from \"./UI/UIMessage\";\nimport {SIM, INTRO, PLAY, GAME_OVER} from \"./SIM/SIM\";\nimport {SIMBricks} from \"./SIM/SIMBricks\";\nimport {UI} from \"./UI/UI\";\nimport {SIMBird} from \"./SIM/SIMBird\";\n\nexport var app = {\n    state : INTRO,\n\n    onResize() {\n        this.build();\n        this.init();\n\n        switch (this.state) {\n            case INTRO:\n                this.intro();\n                break;\n\n            case PLAY:\n                this.intro();\n                break;\n\n            case GAME_OVER:\n                this.intro();\n                break;\n\n        }\n    },\n\n    intro() {\n        this.build();\n        this.init();\n        this.state = INTRO;\n\n        SIM.go(INTRO);\n    },\n\n    build() {\n        SIM.SIMTime = SIMTime;\n        SIM.SIMBird = SIMBird;\n        SIM.SIMCollide = SIMCollide;\n        SIM.SIMBricks = SIMBricks;\n\n        SIM.UI = UI;\n        UI.UITimer    = UITimer;\n        UI.UIBirdY    = UIBirdY;\n        UI.UIBird     = UIBird;\n        UI.UIBirdXY   = UIBirdXY;\n        UI.UIKB       = UIKeyBoard;\n        UI.UIViewPort   = UIViewPort;\n        UI.UIBricks   = UIBricks;\n        UI.UIMessage   = UIMessage;\n        UI.UIBird.UIViewPort     = UI.UIViewPort;\n        UI.UIBricks.UIViewPort     = UI.UIViewPort;\n        UI.UIMessage.UIViewPort     = UI.UIViewPort;\n        SIM.SIMBird.UIViewPort     = UI.UIViewPort;\n        SIM.SIMBird.UIKB     = UI.UIKB;\n        SIM.SIMCollide.UIViewPort     = UI.UIViewPort;\n        UI.UIBirdXY.UIBird = UI.UIBird;\n        SIM.SIMBricks.UIViewPort     = UI.UIViewPort;\n        SIM.SIMBricks.UIBricks     = UI.UIBricks;\n        UI.UITimer.SIMTime = SIM.SIMTime;\n        SIM.SIMCollide.SIMBird = SIM.SIMBird;\n        UI.UIBirdY.SIMBird = SIM.SIMBird;\n        UI.UIBird.SIMBird = SIM.SIMBird;\n        UI.UIViewPort.SIMBird = SIM.SIMBird;\n        UI.UIBricks.SIMBird = SIM.SIMBird;\n        SIM.SIMBricks.SIMBird     = SIM.SIMBird;\n    },\n\n    init() {\n        SIM.init();\n        UI.init(a_canvas.width, a_canvas.height);\n    }\n}\n\n","import {app} from './app.js';\n\n\nfunction onResize(){\n    function onResize1() {\n        var h = window.innerHeight\n            || document.documentElement.clientHeight\n            || document.body.clientHeight;\n\n        let a_canvas = document.getElementById('a_canvas');\n        a_canvas.width = document.body.clientWidth-2;\n        a_canvas.height = h-3;\n\n        app.onResize();\n\n    }\n\n    onResize1();\n\n    if (isMobileOrTablet()) {\n        console.log('isMobileOrTablet onResize()');\n        window.setTimeout(function() {\n            onResize1();\n        }, 200);\n    }\n}\n\n\nwindow.addEventListener('resize', onResize, true);\n\nwindow.onload = function() {\n    app.intro();\n};\n\n\n\n"],"sourceRoot":""}